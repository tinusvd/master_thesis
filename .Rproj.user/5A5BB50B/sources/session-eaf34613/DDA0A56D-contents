# Define the list of required packages
required_packages <- c(
  "tidyverse", "foreach", "doParallel", 
  "rjags", "coda", "rstudioapi", "devtools", "MASS"
)

# Function to check and install missing packages
install_missing_packages <- function(packages) {
  # Identify missing packages
  missing_packages <- packages[!(packages %in% installed.packages()[, "Package"])]
  
  # Install missing packages
  if (length(missing_packages) > 0) {
    message("The following packages are missing and will be installed: ", paste(missing_packages, collapse = ", "))
    install.packages(missing_packages)
  } else {
    message("All required packages are already installed.")
  }
}

# Run the function to ensure all packages are installed
install_missing_packages(required_packages)

# Load the packages
library(tidyverse)
library(foreach)
library(doParallel)
library(rjags)
library(coda)
library(rstudioapi)
library(devtools)
library(MASS)

# Install restriktor via github
#install_github("LeonardV/restriktor")
library(restriktor)


# get wd
wd <- setwd("/Users/mdam21/Desktop/new_process")

load_directory <- paste0(wd, "/data")
save_directory <- paste0(wd, "/output")

# Get JAGS file
showDialog(title = "JAGS model", "Ga naar de map 'simulations' en selecteer het bestand 'bivar_var1_nocovariate.jags'")
jags_file <- "/Users/mdam21/Desktop/new_process/bivar_var1_nocovariate.jags"


meta_conditions2 <- tibble(
  condition = 17,
  u.seed = 1000 + (17),
  nsim = rep(2, 1),
  load_data_path = normalizePath(paste0(load_directory, "/condition_", sprintf("%02d", condition)), winslash = "/"),
  save_gorica_path = normalizePath(paste0(save_directory, "/condition_", sprintf("%02d", condition)), winslash = "/"),
  gorica_save_name = paste0("gorica_condition_", sprintf("%02d", condition)),
  jags_file_path = normalizePath(jags_file, winslash = "/")
)

showDialog(title = "Klaar", "Ok! alles is nu klaar om te runnen. Je kunt nu naar het bestand 'processing' gaan.")
